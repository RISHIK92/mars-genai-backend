import { OutputFormat, StabilityAIContentResult } from '../util';
import StabilityAI from '..';
export type UpscaleOptions = [
    image: string,
    prompt: string,
    negativePrompt?: string,
    outputFormat?: OutputFormat,
    seed?: number,
    creativity?: number
];
export type UpscaleRepsonse = Promise<{
    id: string;
    output_format: OutputFormat;
}>;
/**
 * Stability AI Stable Image Upscale (v2Alpha)
 *
 * @param image - URL of the image to upscale
 * @param prompt - Prompt to use for upscaling
 * @param negative_prompt - Negative prompt to use for upscaling
 * @param output_format - Output format of the upscaled image
 * @param seed - Seed for the upscaling
 * @param creativity - Creativity for the upscaling (0-0.35)
 */
export declare function upscale(this: StabilityAI, ...args: UpscaleOptions): UpscaleRepsonse;
export type UpscaleResultOptions = [id: string, output_format: OutputFormat];
export type UpscaleResultResponse = Promise<StabilityAIContentResult | {
    id: string;
    status: 'in-progress';
}>;
/**
 * Stability AI Stable Image Upscale Result (v2Alpha)
 *
 * @param id - ID of the upscale job
 * @param output_format - Output format requested in original upscale request
 * @returns
 */
export declare function upscaleResult(this: StabilityAI, ...args: UpscaleResultOptions): UpscaleResultResponse;
export type InpaintOptions = [
    modeOptions: {
        mode: 'mask';
        mask?: string;
    } | {
        mode: 'search';
        search_prompt: string;
    },
    image: string,
    prompt: string,
    negative_prompt?: string,
    seed?: number,
    output_format?: OutputFormat
];
export type InpaintResponse = Promise<StabilityAIContentResult>;
/**
 * Stability AI Stable Image Inpaint (v2Alpha)
 *
 * @param options - Inpaint Options
 */
export declare function inpaint(this: StabilityAI, ...args: InpaintOptions): InpaintResponse;
export type ImageToVideoOptions = [image: string, seed?: number, motion_bucket_id?: number, cfg_scale?: number];
export type ImageToVideoResponse = Promise<{
    id: string;
}>;
/**
 * Stability AI Image to Video (v2Alpha)
 *
 * @param options - Image to Video Options
 */
export declare function imageToVideo(this: StabilityAI, ...args: ImageToVideoOptions): ImageToVideoResponse;
export type ImageToVideoResultOptions = [id: string];
export type ImageToVideoResultResponse = Promise<StabilityAIContentResult | {
    id: string;
    status: 'in-progress';
}>;
/**
 * Stability AI Stable Image To Video Result (v2Alpha)
 *
 * @param id - ID of the upscale job
 * @returns
 */
export declare function imageToVideoResult(this: StabilityAI, ...args: ImageToVideoResultOptions): ImageToVideoResultResponse;

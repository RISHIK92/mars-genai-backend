export declare enum APIVersion {
    V1 = "v1",
    V2_ALPHA = "v2alpha"
}
export type OutputFormat = 'jpeg' | 'png' | 'webp';
export type StabilityAIContentResult = {
    filepath: string;
    content_filtered: boolean;
    errored: boolean;
    seed: number;
};
export declare function makeUrl(verison: APIVersion, resource: string, endpoint: string): string;
/**
 * Download an image from a URL and return the local file path
 *
 * @param url
 * @returns filepath string
 */
export declare function downloadImage(url: string): Promise<string>;
export type StabilityAIErrorName = 'StabilityAIInvalidRequestError' | 'StabilityAIUnauthorizedError' | 'StabilityAIContentModerationError' | 'StabilityAIRecordNotFoundError' | 'StabilityAIUnknownError';
export declare class StabilityAIError extends Error {
    constructor(status: number, message: string, data?: any);
}
